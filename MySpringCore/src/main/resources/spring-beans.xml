<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p = "http://www.springframework.org/shema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- <context:annotation-config/> -->
	<context:component-scan base-package="com.springinaction.idol">
		<context:include-filter type="assignable" expression="com.springinaction.idol.Instrument"/>
		<context:include-filter type="assignable" expression="com.springinaction.idol.misc.Audience"/>
		<!-- <context:exclude-filter type="annotation" expression="com.springinaction.annotation.SkipIt"/> -->
	</context:component-scan>
	
   <!-- <bean id="duke" class="com.springinaction.idol.impl.Juggler" init-method="init" destroy-method="destroy">  scope="prototype"
   		<constructor-arg value="#{settings['bean.bags']}"></constructor-arg>
   </bean> -->
   
   <!-- <bean id="sonnet29" class="com.springinaction.idol.impl.Sonic29"></bean> -->
   
  <!--  <bean id="poeticJuggler" class="com.springinaction.idol.impl.PoeticJuggler">
   	<constructor-arg value="15"></constructor-arg>
   	<constructor-arg ref="sonnet29"></constructor-arg>
   </bean> -->
   
   <!-- <bean id="theStage" class="com.springinaction.idol.misc.Stage" factory-method="getInstance">
   </bean> -->
   
   <!-- <bean id="instrumentalist" class="com.springinaction.idol.impl.Instrumentalist"> -->
   		<!--  p:song="Jingle Bells"	p:instrument-ref="piano" -->
   		
   		<!-- <property name="song" value="#{'Jingle Bells'}"></property> -->
   		<!-- <property name="instrument"> ref="saxophone">
   			<bean class="com.springinaction.idol.impl.Piano"/>
   		</property> --> 
   <!-- </bean> -->
   
   <!-- <bean id="saxophone" class="com.springinaction.idol.impl.Saxophone">
   </bean>
   
   <bean id="piano" class="com.springinaction.idol.impl.Piano">
   </bean> -->
   
   <!-- <bean id="instrument" class="com.springinaction.idol.impl.Piano">
   </bean> -->
   
   <bean id="omb" class="com.springinaction.idol.impl.OneManBand">
   		<property name="instrumentsList">   		
   			<list>
   				<ref bean="piano"/>
   				<ref bean="saxophone"/>
   				<ref bean="guitar"/>
   			</list>
   		
   		</property>
   </bean>
   
   <util:properties id="settings" location="classpath:Application_US.properties"/>
   
   <!-- <bean id="audience" class="com.springinaction.idol.misc.Audience"/> -->
   
  <!--  <aop:config>
	   	<aop:aspect ref="audience">
	   		<aop:before pointcut="execution (* com.springinaction.idol.Performer.perform(..))" method="takeSeats"/>
	   		<aop:before pointcut="execution (* com.springinaction.idol.Performer.perform(..))" method="turnOffCellPhones"/>
	   		<aop:after-returning pointcut="execution (* com.springinaction.idol.Performer.perform(..))" method="applaud"/>
	   		<aop:after-throwing pointcut="execution (* com.springinaction.idol.Performer.perform(..))" method="demandRefund"/>
	   	</aop:aspect>
   </aop:config> -->
   
   <bean id="volunteer" class="com.springinaction.idol.impl.Volunteer"/>
   
   <bean id="magician" class="com.springinaction.idol.impl.Magician"/>
   
   <aop:aspectj-autoproxy/>
   
   <aop:config>
   		<!-- AspectJ annotations. -->
	   	<!-- <aop:aspect ref="audience">
	   		<aop:pointcut expression="execution (* com.springinaction.idol.Performer.perform(..))" id="performance"/>
	   		<aop:before pointcut-ref="performance" method="takeSeats"/>
	   		<aop:before pointcut-ref="performance" method="turnOffCellPhones"/>
	   		<aop:after-returning pointcut-ref="performance" method="applaud"/>
	   		<aop:after-throwing pointcut-ref="performance" method="demandRefund"/>
	   	</aop:aspect> -->
	   	<!-- Pass parameters to Advice. -->
	   	<aop:aspect ref="magician">
	   		<aop:pointcut expression="execution (* com.springinaction.idol.Thinker.thinkOfAny(String,Integer)) and args(thoughts,naughty)" id="performance3"/>
	   		<aop:pointcut expression="execution (* com.springinaction.idol.Thinker.thinkOfSomething(String)) and args(thoughts)" id="performance2"/>
	   		<aop:before method="interceptThoughts" pointcut-ref="performance2" arg-names="thoughts" /> <!-- -->
	   		<aop:after pointcut-ref="performance3" method="interceptAny" arg-names="thoughts,naughty"/>
	   	</aop:aspect>
	   	<!-- Extend functionality of Aspect -->
	   	<aop:aspect>
	   		<aop:declare-parents types-matching="com.springinaction.idol.Performer+" 
	   							 implement-interface="com.springinaction.idol.Contestant"
	   							 default-impl="com.springinaction.idol.impl.GraciousContestant"/>
	   	</aop:aspect>
	   	
   </aop:config>
   
</beans>



